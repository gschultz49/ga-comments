{"version":3,"sources":["Signin.tsx","Signout.tsx","Components/ClassList.tsx","Pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignIn","className","onClick","provider","firebase","auth","GoogleAuthProvider","console","log","signInWithPopup","SignOut","currentUser","signOut","CardWrapper","children","styles","clsx","ClassCardComponent","name","uid","CreateClassCard","teacherId","e","ClassList","useCollectionData","firestore","collection","where","snapshotListenOptions","includeMetadataChanges","classes","loading","error","JSON","stringify","map","c","HomePage","useAuthState","user","displayName","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Main","Home","to","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80d1c9c.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport { auth } from \"./App\";\n\nexport default function SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    console.log(\"pre\",auth);\n    auth.signInWithPopup(provider);\n    console.log(\"post\", auth);\n  };\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n    </>\n  );\n}\n","import { auth } from \"./App\";\n\nexport default function SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n","import firebase from \"firebase\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport clsx from \"clsx\";\n\nexport interface ClassCard {\n  name: string;\n  uid: string;\n}\n\nconst ClassList = ({ teacherId }: { teacherId: string | undefined }) => {\n  console.log(teacherId);\n  const [classes, loading, error] = useCollectionData<ClassCard>(\n    firebase.firestore().collection(\"classes\").where(\"uid\", \"==\", teacherId),\n    {\n      snapshotListenOptions: { includeMetadataChanges: true },\n    }\n  );\n  console.log(classes);\n  return (\n    <div className=\"grid grid-cols-3 gap-6\">\n      {error && <strong>Error: {JSON.stringify(error)}</strong>}\n      {loading && <span>Loading...</span>}\n      <CreateClassCard teacherId={teacherId} />\n      {classes?.map((c) => (\n        <ClassCardComponent name={c.name} uid={c.uid} />\n      ))}\n    </div>\n  );\n};\n\nconst CardWrapper = ({ children, onClick, styles = [] }: any) => {\n  return (\n    <div\n      className={clsx([\n        \"shadow-lg\",\n        \"rounded-md\",\n        \"bg-purple-200\",\n        \"cursor-pointer\",\n        \"transform\",\n        \"transition\",\n        \"hover:scale-110\",\n        \"motion-reduce:transform-none\",\n        ...styles,\n      ])}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ClassCardComponent = ({ name, uid }: ClassCard) => {\n  return (\n    <CardWrapper>\n      <h1>{name}</h1>\n      <h1>{uid}</h1>\n    </CardWrapper>\n  );\n};\n\nconst CreateClassCard = ({ teacherId }: { teacherId: string | undefined }) => {\n  return (\n    <CardWrapper\n      onClick={(e: Event) => console.log(\"clicked add card\", teacherId, e)}\n      styles={[]}\n    >\n      <html>create class button</html>\n    </CardWrapper>\n  );\n};\n\nexport default ClassList;\n","import React from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../App\";\nimport ClassList from \"../Components/ClassList\";\n\nexport default function HomePage() {\n  const [user] = useAuthState(auth);\n  return (\n    <div>\n      <h2>Welcome {user?.displayName}!</h2>\n      <ClassList teacherId={user?.uid} />\n    </div>\n  );\n}\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n// import { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport SignIn from \"./Signin\";\nimport SignOut from \"./Signout\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCwxiDrVBzpiEtz5rL9eJt6bZIdymyTQ30\",\n  authDomain: \"ga-comments.firebaseapp.com\",\n  projectId: \"ga-comments\",\n  storageBucket: \"ga-comments.appspot.com\",\n  messagingSenderId: \"671616870740\",\n  appId: \"1:671616870740:web:74456365bd146415e180c1\",\n  measurementId: \"G-MMQSJ4ES92\",\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const analytics = firebase.analytics();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <SignOut />\n      <section>\n        {user ? (\n          <Main />\n        ) : (\n          // <header className=\"App-header\">\n          //   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          //   <p>\n          //     Edit <code>src/App.tsx</code> and save to reload.\n          //   </p>\n          //   <Test />\n          //   <a\n          //     className=\"App-link\"\n          //     href=\"https://reactjs.org\"\n          //     target=\"_blank\"\n          //     rel=\"noopener noreferrer\"\n          //   >\n          //     Learn React\n          //   </a>\n          // </header>\n          <SignIn />\n        )}\n      </section>\n    </div>\n  );\n}\n\nconst Main = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nfunction Home() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">HomePage</Link>\n          </li>\n          {/* <li>\n            <Link to=\"/class/123\">Class View 123</Link>\n          </li>\n          <li>\n            <Link to=\"/student\">Student</Link>\n          </li> */}\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n\n          {/* <Route path=\"/class/:id\">\n            <AddClassPage />\n          </Route> */}\n\n          {/* <Route path=\"/student\">\n            <Student />\n          </Route> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\n// function AddClassPage() {\n//   // We can use the `useParams` hook here to access\n//   // the dynamic pieces of the URL.\n//   let { id } = useParams<{ id: string }>();\n\n//   return (\n//     <div>\n//       <h2>Class Number, {id}</h2>\n//     </div>\n//   );\n// }\n\n// function Student() {\n//   return (\n//     <div>\n//       <h2>student</h2>\n//     </div>\n//   );\n// }\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}